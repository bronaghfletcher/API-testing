import os
import requests
import pytest

GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')  # Set your GitHub token as an environment variable for authentication

OWNER = "octocat"  # Replace with your repo owner
REPO = "Hello-World"  # Replace with your repo name

BASE_URL = f"https://api.github.com/repos/{OWNER}/{REPO}/commits"

HEADERS = {
    "Accept": "application/vnd.github+json",
    "Authorization": f"token {GITHUB_TOKEN}"
}

@pytest.mark.parametrize("sha", [None])
def test_list_commits(sha):
    """Test listing commits."""
    url = BASE_URL
    params = {}
    if sha:
        params['sha'] = sha
    response = requests.get(url, headers=HEADERS, params=params)
    assert response.status_code == 200
    data = response.json()
    assert isinstance(data, list)
    assert "sha" in data[0]

def test_get_single_commit():
    """Test fetching a single commit."""
    # Fetch latest commit first
    response = requests.get(BASE_URL, headers=HEADERS)
    assert response.status_code == 200
    commits = response.json()
    latest_sha = commits[0]["sha"]

    # Fetch details for the latest commit
    commit_url = f"{BASE_URL}/{latest_sha}"
    response = requests.get(commit_url, headers=HEADERS)
    assert response.status_code == 200
    commit = response.json()
    assert commit["sha"] == latest_sha
    assert "commit" in commit